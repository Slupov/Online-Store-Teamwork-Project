@model OnlineStore.Models.Product
@using Microsoft.AspNet.Identity
@using OnlineStore.Models;
@{
    OnlineStorePSGMEntities db = new OnlineStorePSGMEntities();
}
@{ 
    var productComments = db.Comments.Where(c => c.ProductID == Model.ProductID).ToList();
}
<script type="text/javascript" src="/scripts/jquery-1.10.2.min.js"></script>


@{
    ViewBag.Title = "Details";
    string imgSrc = "https://raw.githubusercontent.com/Slupov/Online-Store-Teamwork-Project/master/OnlineStore/OnlineStore/product-images/" + Model.ImageSource;
    string[] descriptionListItems = Model.Description.Split(';').ToArray();
    ViewBag.ProductName = Model.ProductName;

    if (User.Identity.IsAuthenticated)
    {
        var aspUserName = User.Identity.GetUserName();
        var dbUser = db.Members.Where(m => m.Username == aspUserName).First();
    }

}

<div id="product-container">

    <div id="image-container">
        <img style="-webkit-user-select: none" src=@imgSrc>
    </div>

    <div id="product-info">
        <div id="product-name">@Html.DisplayFor(model => model.ProductName)</div>
        <div id="product-description"><ul>
                @Html.Raw(Model.Description)
            </ul>
        </div>
        <div id="rating-average">
            @{ double avrgRating = Math.Round(Model.Ratings.Select(r => r.Value*r.Amount).Sum()/(double) Model.Ratings.Select(r => r.Amount).Sum(), 1); }
            <span>Rating:  @avrgRating</span>
        </div>

        <div id="rating-distribution">
            @foreach (Rating rating in Model.Ratings.OrderByDescending(r => r.Value))
            {
                for (int i = 0; i < rating.Value; i++)
                {
                    <img src="../../Content/3d-yellow-star.png" height="20"/>
                }
                <span>@rating.Amount</span>
                <br/>
            }
        </div>
        <div id="seller">Seller: @Html.ActionLink(Model.Member.Username, "Details", "Members", new {id = Model.MemberID}, null)</div>
    </div>

    <div id="purchase-panel">
        <input type="text" id="purchase-amount" value="1"/>

        @if (User.Identity.IsAuthenticated)
        {
            <input type="submit" id="myLink" value="Add to cart" onclick="addToCart()"/>
        }
    </div>
</div>

<table id="comment-section">

    <tr>
        <th>User</th>
        <th>Title</th>
        <th>Comment</th>
    </tr>
    
        @foreach (var comment in productComments)
        {
            <tr class="comment-section-row">
                <td>
                    @{ 
                        var dbUser = db.Members.Where(m => m.MemberID == comment.MemberID).First().Username;
                        @Html.Raw(dbUser);
                    }        
                </td>
                <td class="comment-title">
                    @comment.Title;
                </td>
                <td class="comment-message">
                    @Html.Raw(comment.Message);
                </td>
            </tr>

        }
    
    
</table>

<p>
    @if (User.Identity.IsAuthenticated)
    {
        if (User.Identity.GetUserName() == Model.Member.Username)
        {
        @Html.ActionLink("Edit", "Edit", new { id = Model.ProductID }); @Html.Raw(" | ")
            @Html.ActionLink("Delete", "Delete", new { id = Model.ProductID }); @Html.Raw(" |")
        }
    }


    @Html.ActionLink("Back to " + @Model.ProductType, "BrowseProducts", "Products", new { category = @Model.ProductType }, null) |
</p>

<script>

    function addToCart() {

        let productID = '@(Model.ProductID)';
        console.log("srah tuk")
        $.ajax({
            type: "GET",
            traditional: true,
            url: "/Carts/AddToCart",
            data: {
                id: productID,
                amount:$('#purchase-amount').val()
            },
            success: function () {
                alert("Value Added");
            }// or any other indication if you want to show

        });
    }
</script>
